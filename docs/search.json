[
  {
    "objectID": "lab-03.html",
    "href": "lab-03.html",
    "title": "lab 3: COVID-19",
    "section": "",
    "text": "You’ve been tasked with giving a report to Governor Polis each morning about the most current COVID-19 conditions at the county level.\nAs it stands, the Colorado Department of Public Health maintains a watch list of counties that are being monitored for worsening corona virus trends. There are six criteria used to place counties on the watch list:\n1.Doing fewer than 150 tests per 100,000 residents daily (over a 7-day average) 2.More than 100 new cases per 100,000 residents over the past 14 days… 3.25 new cases per 100,000 residents and an 8% test positivity rate 4.10% or greater increase in COVID-19 hospitalized patients over the past 3 days 5.Fewer than 20% of ICU beds available 6.Fewer than 25% ventilators available Of these 6 conditions, you are in charge of monitoring condition number 2.\nTo do this job well, you should set up a reproducible framework to communicate the following in a way that can be updated every time new data is released (daily):\n\ncumulative cases in the 5 worst counties\ntotal NEW cases in the 5 worst counties\nA list of safe counties\nA text report describing the total new cases, total cumulative cases, and number of safe counties. You should build this analysis in such a way that running it will extract the most current data straight from the NY-Times URL and the state name and date are parameters that can be changed allowing this report to be run for other states/dates.\n\n\n#Download libraries,read in COVID-19 Data, and prepare data table for calculations\nlibrary(tidyverse) #data wrangling and visualization) \n#&gt; ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.4     ✔ readr     2.1.5\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.1\n#&gt; ✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n#&gt; ✔ purrr     1.0.2     \n#&gt; ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ dplyr::filter() masks stats::filter()\n#&gt; ✖ dplyr::lag()    masks stats::lag()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(flextable) #make nice tables)\n#&gt; \n#&gt; Attaching package: 'flextable'\n#&gt; \n#&gt; The following object is masked from 'package:purrr':\n#&gt; \n#&gt;     compose\n\nlibrary(zoo) #(rolling averages\n#&gt; \n#&gt; Attaching package: 'zoo'\n#&gt; \n#&gt; The following objects are masked from 'package:base':\n#&gt; \n#&gt;     as.Date, as.Date.numeric\n\nurl = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv'\ncovid_raw&lt;-read_csv(url)\n#&gt; Rows: 2502832 Columns: 6\n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; Delimiter: \",\"\n#&gt; chr  (3): county, state, fips\n#&gt; dbl  (2): cases, deaths\n#&gt; date (1): date\n#&gt; \n#&gt; ℹ Use `spec()` to retrieve the full column specification for this data.\n#&gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#create my.date and my.state object. Set my date to \"2022-02-01\" and my state to \"colorado\"\nmy.date &lt;- \"2022-02-01\" \n  class(my.date)\n#&gt; [1] \"character\"\ndate&lt;-my.date %&gt;%\n  as.Date()\nclass(date)\n#&gt; [1] \"Date\"\nmy.state &lt;- \"Colorado\"\n\n#Start by making a subset that limits (filter) the data to Colorado and add a new column (mutate) with the daily new cases using diff/lag by county (group_by). Do the same for new deaths as well.\n\n#(Hint: you will need some combination of filter, group_by, arrange, mutate, diff/lag, and ungroup)\n\ncovid1 = covid_raw %&gt;%\n  filter(state == my.state) %&gt;%\n  arrange(county, date) %&gt;%\n  group_by(county) %&gt;%\n  mutate(\n    new_cases = cases - lag(cases, order_by = date),\n    new_deaths = deaths - lag(deaths, order_by = date)\n  ) %&gt;%\n  ungroup()\n\nhead(covid1)\n#&gt; # A tibble: 6 × 8\n#&gt;   date       county state    fips  cases deaths new_cases new_deaths\n#&gt;   &lt;date&gt;     &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;\n#&gt; 1 2020-03-12 Adams  Colorado 08001     2      0        NA         NA\n#&gt; 2 2020-03-13 Adams  Colorado 08001     3      0         1          0\n#&gt; 3 2020-03-14 Adams  Colorado 08001     6      0         3          0\n#&gt; 4 2020-03-15 Adams  Colorado 08001     6      0         0          0\n#&gt; 5 2020-03-16 Adams  Colorado 08001     8      0         2          0\n#&gt; 6 2020-03-17 Adams  Colorado 08001    10      0         2          0"
  },
  {
    "objectID": "lab-03.html#q2-lets-pretend-it-in-january-1st-2022.-you-are-a-data-scientist-for-the-state-of-colorado-department-of-public-health.",
    "href": "lab-03.html#q2-lets-pretend-it-in-january-1st-2022.-you-are-a-data-scientist-for-the-state-of-colorado-department-of-public-health.",
    "title": "lab 3: COVID-19",
    "section": "",
    "text": "You’ve been tasked with giving a report to Governor Polis each morning about the most current COVID-19 conditions at the county level.\nAs it stands, the Colorado Department of Public Health maintains a watch list of counties that are being monitored for worsening corona virus trends. There are six criteria used to place counties on the watch list:\n1.Doing fewer than 150 tests per 100,000 residents daily (over a 7-day average) 2.More than 100 new cases per 100,000 residents over the past 14 days… 3.25 new cases per 100,000 residents and an 8% test positivity rate 4.10% or greater increase in COVID-19 hospitalized patients over the past 3 days 5.Fewer than 20% of ICU beds available 6.Fewer than 25% ventilators available Of these 6 conditions, you are in charge of monitoring condition number 2.\nTo do this job well, you should set up a reproducible framework to communicate the following in a way that can be updated every time new data is released (daily):\n\ncumulative cases in the 5 worst counties\ntotal NEW cases in the 5 worst counties\nA list of safe counties\nA text report describing the total new cases, total cumulative cases, and number of safe counties. You should build this analysis in such a way that running it will extract the most current data straight from the NY-Times URL and the state name and date are parameters that can be changed allowing this report to be run for other states/dates.\n\n\n#Download libraries,read in COVID-19 Data, and prepare data table for calculations\nlibrary(tidyverse) #data wrangling and visualization) \n#&gt; ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.4     ✔ readr     2.1.5\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.1\n#&gt; ✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n#&gt; ✔ purrr     1.0.2     \n#&gt; ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ dplyr::filter() masks stats::filter()\n#&gt; ✖ dplyr::lag()    masks stats::lag()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(flextable) #make nice tables)\n#&gt; \n#&gt; Attaching package: 'flextable'\n#&gt; \n#&gt; The following object is masked from 'package:purrr':\n#&gt; \n#&gt;     compose\n\nlibrary(zoo) #(rolling averages\n#&gt; \n#&gt; Attaching package: 'zoo'\n#&gt; \n#&gt; The following objects are masked from 'package:base':\n#&gt; \n#&gt;     as.Date, as.Date.numeric\n\nurl = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv'\ncovid_raw&lt;-read_csv(url)\n#&gt; Rows: 2502832 Columns: 6\n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; Delimiter: \",\"\n#&gt; chr  (3): county, state, fips\n#&gt; dbl  (2): cases, deaths\n#&gt; date (1): date\n#&gt; \n#&gt; ℹ Use `spec()` to retrieve the full column specification for this data.\n#&gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#create my.date and my.state object. Set my date to \"2022-02-01\" and my state to \"colorado\"\nmy.date &lt;- \"2022-02-01\" \n  class(my.date)\n#&gt; [1] \"character\"\ndate&lt;-my.date %&gt;%\n  as.Date()\nclass(date)\n#&gt; [1] \"Date\"\nmy.state &lt;- \"Colorado\"\n\n#Start by making a subset that limits (filter) the data to Colorado and add a new column (mutate) with the daily new cases using diff/lag by county (group_by). Do the same for new deaths as well.\n\n#(Hint: you will need some combination of filter, group_by, arrange, mutate, diff/lag, and ungroup)\n\ncovid1 = covid_raw %&gt;%\n  filter(state == my.state) %&gt;%\n  arrange(county, date) %&gt;%\n  group_by(county) %&gt;%\n  mutate(\n    new_cases = cases - lag(cases, order_by = date),\n    new_deaths = deaths - lag(deaths, order_by = date)\n  ) %&gt;%\n  ungroup()\n\nhead(covid1)\n#&gt; # A tibble: 6 × 8\n#&gt;   date       county state    fips  cases deaths new_cases new_deaths\n#&gt;   &lt;date&gt;     &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;\n#&gt; 1 2020-03-12 Adams  Colorado 08001     2      0        NA         NA\n#&gt; 2 2020-03-13 Adams  Colorado 08001     3      0         1          0\n#&gt; 3 2020-03-14 Adams  Colorado 08001     6      0         3          0\n#&gt; 4 2020-03-15 Adams  Colorado 08001     6      0         0          0\n#&gt; 5 2020-03-16 Adams  Colorado 08001     8      0         2          0\n#&gt; 6 2020-03-17 Adams  Colorado 08001    10      0         2          0"
  }
]